class Solution {
public:
    char g[30][30];
    bool cc[30],dd[30],ff[30];
    vector<vector<string>> ans;
    void dfs(int x,int n){
        if(x==n){
            vector<string> ss;
            for(int i=1;i<=n;i++){
                string t="";
                for(int j=1;j<=n;j++){
                    t+=g[i][j];
                }
                ss.push_back(t);
            }
            ans.push_back(ss);
            return ;
        }
        for(int i=1;i<=n;i++){
            if(!cc[i]&&!dd[x+i-1]&&!ff[x-i+n]){
                g[x+1][i]='Q';
                cc[i]=dd[x+i-1]=ff[x-i+n]=true;
                dfs(x+1,n);
                g[x+1][i]='.';
                cc[i]=dd[x+i-1]=ff[x-i+n]=false;
            }
        }
    }
    vector<vector<string>> solveNQueens(int n) {
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n;j++){
                g[i][j]='.';
            }
        }
        dfs(0,n);
        return ans;
    }
};