/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
void fun(int* nums,int numsSize,int* v,int* p,int **ans,int x,int* r){
    for(int i=0;i<numsSize;i++){
        if(v[i])  
            continue;
        p[x]=nums[i];
        v[i]=1;
        x++;
        if(numsSize==x) {
            ans[*r]=(int*)malloc(sizeof(int)*numsSize);
            for(int j=0;j<numsSize;j++)
                ans[*r][j]=p[j];
            (*r)++;
        }
        fun(nums,numsSize,v,p,ans,x,r);
        v[i]=0;
        x--;
    }
}
int** permute(int* nums, int numsSize, int* returnSize, int** returnColumnSizes){
    int v[numsSize],p[numsSize];
    int x=0,r=0;
    memset(v,0,sizeof(v));
    int **ans=(int**)malloc(sizeof(int*)*10000);  
    fun(nums,numsSize,v,p,ans,x,&r);
    *returnSize=r;
    *returnColumnSizes=(int*)malloc(sizeof(int)*10000);
    for(int i=0;i<r;i++)
        (*returnColumnSizes)[i]=numsSize; 
    return ans;
}