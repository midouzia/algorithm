int x= 0;
int a[10240];
int s[10240];
int p=0;
void dfs(int *nums,int numsSize,int **ans,int start,int k){
    if(p==k){
        ans[x]=(int*)malloc(sizeof(int)*numsSize);
        memcpy(ans[x],a,sizeof(int)*numsSize);
        s[x]=k;
        x++;
        return;
    }
    for(int i=start;i<numsSize;i++){
        a[p++]=nums[i];
        dfs(nums,numsSize,ans,i+1,k);
        p--;
    }
}
int **subsets(int *nums, int numsSize, int *returnSize, int **returnColumnSizes){
    int **ans=(int **)malloc(sizeof(int *)*10240);
    x=0;
    for (int i=0;i<=numsSize;i++){
        p=0;
        dfs(nums,numsSize,ans,0,i);
    }
    *returnSize=x;
    *returnColumnSizes=malloc(sizeof(void*)*x);
    for (int i=0;i<x;i++)
        (*returnColumnSizes)[i]=s[i];
    return ans;
}