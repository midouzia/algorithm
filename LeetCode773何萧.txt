class Solution {
public:
    int slidingPuzzle(vector<vector<int>>& board) {
        unordered_set<string> ans;
        queue<string> q;
        string s;
        string target="123450";
        for(int i=0;i<6;i++)
            s+=('0'+board[i/3][i%3]);
        if(s==target)
            return 0;
        int t=0;
        q.push(s);
        ans.insert(s);
        int move[4][2]={{-1,0},{0,1},{1,0},{0,-1}};
        while(!q.empty()){
            int size=q.size();
            t++;
            while(size--){
                auto a=q.front();
                q.pop();
                int p=a.find('0');
                for(int i=0;i<4;i++){
                    int n=p/3+move[i][0];
                    int m=p%3+move[i][1];
                    if(n<0||m<0||n>=2||m>=3)
                        continue;
                    int next=n*3+m%3;
                    swap(a[next],a[p]);
                    if(a==target)
                        return t;
                    if(!ans.count(a)){
                        ans.insert(a);
                        q.push(a);
                    }
                    swap(a[next],a[p]);
                }
            }
        }
        return -1;
    }
};